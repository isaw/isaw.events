Metadata-Version: 1.0
Name: plone.session
Version: 2.1
Summary: Session based authentication for Zope
Home-page: http://svn.plone.org/svn/plone/plone.session
Author: Wichert Akkerman - Plone Foundation
Author-email: plone-developers@lists.sourceforge.net
License: GPL
Download-URL: http://code.google.com/p/plone/downloads/list
Description: Overview
        --------
        
        plone.session implements secure session management for Zope sites. It
        can be used directly, or be used as a base for custom session management
        strategies.
        
        In its default configuration plone.sessions uses a secure cryptographic
        hash based on HMAC_ SHA-1_ to authenticate sessions. The hash is generated
        using the users login name and a secret stored in the PAS plugin. This has
        several advantages over other session management systems:
        
        * passwords are not send to the server in a cookie on every request, as
        is done by the *Cookie Auth Helper*
        * it does not require any ZODB write for sessions, as is needed by the
        *Session Crumbler*. This allows it to scale very well.
        * it allows you to invalidate all existing authentication cookies for
        users by updating the secret.
        
        Normally a session cookie is used to track sessions; that means that as long as
        a user keeps his browser open (and does not explicitly log out) the session
        remains opens. This can be changed by setting the ``cookie_lifetime`` property
        of the plugin to the number of seconds the cookie should remain valid *after
        the moment of login*.
        
        .. _HMAC: http://en.wikipedia.org/wiki/HMAC
        .. _SHA-1: http://en.wikipedia.org/wiki/SHA-1
        
        Using plone.session
        -------------------
        
        plone.session only takes care of handling sessions for already authenticated
        users. This means it can not be used stand-alone: you need to have another
        PAS plugin, such as the standard *Cookie Auth Helper* to take care of
        authentication.
        
        After a user has been authenticated plone.session can take over via the
        PAS *credentials update* mechanism.
        
        
        Using custom session authentication
        -----------------------------------
        
        plone.session delegates the generation and verification of sessions to
        an ISessionSource adapter. This adapter adapts the PAS plugin and
        implements four methods:
        
        createIdentifier
        Return an identifier for a userid. An identifier is a standard python
        string object.
        
        verifyIdentifier
        Verify if an identity corresponds to a valid session. Returns
        a boolean indicating if the identify is valid.
        
        extractLoginName
        Extract the login name from an identifier.
        
        invalidateSession
        Mark a session for a principal as invalid. A source may not support this,
        in which case it should return False.
        
        plone.session ships with two example adapers: hash and userid.
        
        The userid adapter is a trivial example which uses the userid as session
        identifier.  This is very insecure since there is no form of verification at
        all. DO NOT USE THIS ADAPTER IN YOUR SITE!
        
        The hash plugin creates a random secret string which is stored as an attribute
        on your plugin. It uses this secret to create a SHA1 signature for the user id
        with the secret as session identifier. This approach has several good qualities:
        
        * it allows us to verify that a session identifier was created by this site
        * there is no need to include passwords in the session idenfitier
        * it does not need to store anything in Zope itself. This means it works
        as-is in ZEO setups and can scale very well.
        
        There are a few downsides to this approach:
        
        * if a users password is changed or disabled session identifiers will continue
        to work, making it hard to lock out users
        
        Changelog
        ---------
        
        Version 2.1  - February 4, 2009
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Protect the setupSession call with the ManageUsers permission.
        Fixes possible privilege escalation.
        [maurits]
        
        - Make the cookie lifetime configurable. Patch by Rok Garbas. Fixes
        http://dev.plone.org/plone/ticket/7248
        [wichert, garbas]
        
        
        Version 2.0  - July 8, 2008
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Fix CSRF protection for managing server secrets via the Plone session
        plugin for PAS. Fixes http://dev.plone.org/plone/ticket/8176
        [witsch]
        
        
        Version 1.2  - February 15, 2007
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Use the binascii base64 methods to encode/decode the session cookie. This
        prevents newlines being inserted in long cookies.
        [wichert]
        
        
        Version 1.1  - September 11, 2007
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - Use the userid instead of the login name in session identifiers. This
        has the side-effect of working around a bug in PAS which caused us to
        mix up users when the login name used was an inexact match for another
        login name.
        [wichert]
        
        
        Version 1.0  - August 15, 2007
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        - First stable release
        [wichert]
        
        
Keywords: PAS session authentication Zope
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Framework :: Zope2
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Systems Administration :: Authentication/Directory

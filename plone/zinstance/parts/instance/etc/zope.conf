%define INSTANCEHOME /usr/local/www/repos/Events/plone/zinstance/parts/instance
instancehome $INSTANCEHOME
%define CLIENTHOME /usr/local/www/repos/Events/plone/zinstance/var/instance
clienthome $CLIENTHOME

products /usr/local/www/repos/Events/plone/zinstance/products
products /usr/local/www/repos/Events/plone/zinstance/parts/productdistros
debug-mode off
security-policy-implementation C
verbose-security off
default-zpublisher-encoding utf-8






<environment>
    
PYTHON_EGG_CACHE /usr/local/www/repos/Events/plone/zinstance/var/.python-eggs
</environment>

<warnfilter>
  action ignore
  category exceptions.DeprecationWarning
</warnfilter>

<eventlog>
  level INFO
  <logfile>
    path /usr/local/www/repos/Events/plone/zinstance/var/log/instance.log
    level INFO
  </logfile>
</eventlog>

<logger access>
  level WARN
  <logfile>
    path /usr/local/www/repos/Events/plone/zinstance/var/log/instance-Z2.log
    format %(message)s
  </logfile>
</logger>

<http-server>
  # valid keys are "address" and "force-connection-close"
  address 8080
  # force-connection-close on
  # You can also use the WSGI interface between ZServer and ZPublisher:
  # use-wsgi on

</http-server>





<zodb_db main>
    # Main database
    cache-size 5000
    
# FileStorage database
    <filestorage>
      path /usr/local/www/repos/Events/plone/zinstance/var/filestorage/Data.fs
    </filestorage>
    mount-point /
</zodb_db>

<zodb_db temporary>
    # Temporary storage database (for sessions)
    <temporarystorage>
      name temporary storage for sessioning
    </temporarystorage>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer
</zodb_db>

pid-filename /usr/local/www/repos/Events/plone/zinstance/var/instance.pid
lock-filename /usr/local/www/repos/Events/plone/zinstance/var/instance.lock


